require('dotenv').config();
const app = require('../app');
const http = require('http');
const logger = require("../services/logger.service");
const { normalize } = require('path');

const port = normalizeport(process.env.PORT || '3000');
app.set('port', port);

//Create  HTTP server.
const server = http.createServer(app);

//port listning,on all interfaces.
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

//Normalize a port into a number,string , or false.

function normalizeport(val) {
    const port = parseInt(val, 10);

    if (isNaN(port)) {
        //port is pipe
        return val;
    }

    if (port >= 0) {
        //port is number
        return port;
    }

    return false;
}

//listener for HTTP server "error" event.

function onError(error) {
    if (error.syscall !== "listen") {
        throw error;
    }

    const bind = typeof port === "string"
        ? "Pipe" + port
        : "Port" + port;

    //handle specific listen errors with friendly messages
    switch (error.code) {
        case "EACCES":
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;

        case 'EADDRINUSE':
            console.error(bind + " is already in use");
            process.exit(1);
            break;

        default:
            throw error;
            break;
    }
}

//function for Listning event

function onListening() {
    const addr = server.address();
    const bind = typeof addr === 'string'
        ? 'Pipe' + addr
        : 'Port' + addr.port;
    logger.info('Listening on ' + bind);
}

module.exports = app;